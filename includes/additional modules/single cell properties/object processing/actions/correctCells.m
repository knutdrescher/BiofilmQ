function objects = correctCells(handles, objects, params, frame, parameters)

if strcmp(parameters, 'again')
    try
        objects = rmfield(objects, 'merged');
        objects = rmfield(objects, 'splitted');
    end
end
% First cells are merged and then declumped

goodObjects = objects.goodObjects;

volumes = [objects.stats.Shape_Volume];
medianVolume = median(volumes(goodObjects)); % Calculate the volume considering only good objects

% Merging
fprintf('     1. merging cells:\n');
params.mergeFactor = params.minMergeSize; % * median volume
objects = mergeObjectsAuto(objects, params, medianVolume, 0);

% Splitting
fprintf('     2. splitting cells:\n');
objects = splitCellsByClustering_par(objects, params, medianVolume);


% Merge the small stuff which was generated by splitting
fprintf('     3. merging cells again:\n');
objects = mergeObjectsAuto(objects, params, medianVolume, 1);
