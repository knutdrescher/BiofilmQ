function handles = thresholding_slice_panel(handles, debug)  

if nargin < 2
debug = false;
end

        if debug
            padding = 8;
            spacing = 8;
            objectHeight = 22;
  
            f = figure();
            
        else
            padding = handles.settings.padding;
            spacing = handles.settings.spacing;
            objectHeight = handles.settings.objectHeight;
            f = handles.mainFig;
        end
        
        %% Interface definitions

        % UIPanels
        handles.layout.uipanels.uipanel_workflow_segmentation_thresholdBySlice = ...
            uipanel( ...
            'Parent', f, ... 
            'Tag', 'uipanel_workflow_segmentation_thresholdBySlice', ...
            'Title', '2.4 Thresholding by slice');
        
        % Labels
        handles.uicontrols.text.text_thresholdBySliceSmoothRange = ...
        uicontrol( ...
            'Tag', 'text_thresholdBySliceSmoothRange', ...
            'Style', 'text', ...
            'HorizontalAlignment', 'right', ...
            'String', 'Smoothing Range');
        
        handles.uicontrols.text.text_thresholdBySliceDebug = ...
        uicontrol( ...
            'Tag', 'text_thresholdBySliceDebug', ...
            'Style', 'text', ...
            'HorizontalAlignment', 'right', ...
            'String', 'Debug');
      
        % edits
        handles.uicontrols.edit.thresholdBySliceSmoothRange = ...
        uicontrol( ...
            'Tag', 'thresholdBySliceSmoothRange', ...
            'Style', 'edit', ...
            'String', '25');
        
        % checkboxes
        handles.uicontrols.checkbox.thresholdBySliceDebug = ...
        uicontrol( ...
            'Tag', 'thresholdBySliceDebug', ...
            'Style', 'checkbox');
       
        
        %% Interface Layout
        h = uix.VBox( ...
            'Parent', handles.layout.uipanels.uipanel_workflow_segmentation_thresholdBySlice, ...
            'Padding', 4*padding, ...
            'Spacing', spacing);
        
            h1a = uix.HBox( ...
                'Parent', h, ...
                'Padding', 0, ...
                'Spacing', spacing);
            
                h1a_v1a = uix.VBox( ...
                    'Parent', h1a, ...
                    'Padding', 0, ...
                    'Spacing', 0);
                    
                    % Add space for correct alingment between text box and
                    % edit field
                    uix.Empty('Parent', h1a_v1a); 
                    handles.uicontrols.text.text_thresholdBySliceSmoothRange.Parent = h1a_v1a;
                    
                h1a_v1a.Heights = [0.5*spacing, -1];
                
                handles.uicontrols.edit.thresholdBySliceSmoothRange.Parent = h1a;

            h1a.Widths = [105, 40];
            
            h1b = uix.HBox( ...
                'Parent', h, ...
                'Padding', 0, ...
                'Spacing', spacing);
            
                h1b_v1a = uix.VBox( ...
                    'Parent', h1b, ...
                    'Padding', 0, ...
                    'Spacing', 0);
                    
                    % Add space for correct alingment between text box and
                    % edit field
                    uix.Empty('Parent', h1b_v1a); 
                    handles.uicontrols.text.text_thresholdBySliceDebug.Parent = h1b_v1a;
                    
                h1b_v1a.Heights = [0.5*spacing, -1];
                
                handles.uicontrols.checkbox.thresholdBySliceDebug.Parent = h1b;

            h1b.Widths = [105, 40];
                
        h.Heights = [objectHeight, objectHeight];
            
        %% Callbacks
        if ~debug
            handles.uicontrols.edit.thresholdBySliceSmoothRange.Callback = ...
                @(hObject,eventdata) thresholdBySliceSmoothRange_Callback(hObject,eventdata,guidata(hObject));
            
            handles.uicontrols.checkbox.thresholdBySliceDebug.Callback = ...
                @(hObject,eventdata) thresholdBySliceDebug_Callback(hObject,eventdata,guidata(hObject));
        end
        